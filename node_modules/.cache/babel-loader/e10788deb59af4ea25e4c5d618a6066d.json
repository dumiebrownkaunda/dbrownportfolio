{"ast":null,"code":"var _jsxFileName = \"/Users/dbkaunda/Documents/My Projects/dumie-brown-portfolio-main/src/PortfolioContainer/Home/Header/Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../utilities/commonUtil\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport Particles from \"react-tsparticles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((Screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClasses(i),\n      onClick: () => switchScreen(i, Screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: Screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, Screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this));\n  };\n\n  const getHeaderOptionsClasses = index => {\n    let classes = \"header-option \";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\n    if (selectedScreen === index) classes += \"selected-header-option \";\n    return classes;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: \"smooth\"\n    });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\n  useEffect(() => {\n    return () => {\n      currentScreenSubscription.unsubscribe();\n    };\n  }, [currentScreenSubscription]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"header-container\",\n    onClick: () => setShowHeaderOptions(!showHeaderOptions),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-hamburger\",\n        onClick: () => setShowHeaderOptions(!showHeaderOptions),\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          className: \"header-hamburger-bars\",\n          icon: faBars\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header-logo\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"DBROWN~\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Particles, {\n          params: {\n            particles: {\n              number: {\n                value: 50\n              },\n              size: {\n                value: 3\n              }\n            },\n            interactivity: {\n              events: {\n                onhover: {\n                  enable: true,\n                  mode: \"repulse\"\n                }\n              }\n            },\n            modes: {\n              polygon: {\n                distance: 250,\n                duration: 2,\n                size: 5,\n                opacity: 0.4\n              },\n              repulse: {\n                distance: 400,\n                duration: 4\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n        children: getHeaderOptions()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"ujF17CXvQfKrqR4WPi1qhAXORpE=\");\n\n_c = Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/Users/dbkaunda/Documents/My Projects/dumie-brown-portfolio-main/src/PortfolioContainer/Home/Header/Header.js"],"names":["React","useState","useEffect","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","Particles","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOptions","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptions","map","Screen","i","getHeaderOptionsClasses","switchScreen","screen_name","index","classes","length","screen","screenComponent","document","getElementById","scrollIntoView","behavior","unsubscribe","particles","number","value","size","interactivity","events","onhover","enable","mode","modes","polygon","distance","duration","opacity","repulse"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from \"../../../utilities/commonUtil\";\nimport ScrollService from \"../../../utilities/ScrollService\";\nimport { faBars } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport \"./Header.css\";\nimport Particles from \"react-tsparticles\";\n\nexport default function Header() {\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOptions] = useState(false);\n\n  const updateCurrentScreen = (currentScreen) => {\n    if (!currentScreen || !currentScreen.screenInView) return;\n\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n  let currentScreenSubscription =\n    ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((Screen, i) => (\n      <div\n        key={Screen.screen_name}\n        className={getHeaderOptionsClasses(i)}\n        onClick={() => switchScreen(i, Screen)}\n      >\n        <span>{Screen.screen_name}</span>\n      </div>\n    ));\n  };\n\n  const getHeaderOptionsClasses = (index) => {\n    let classes = \"header-option \";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator \";\n\n    if (selectedScreen === index) classes += \"selected-header-option \";\n\n    return classes;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n\n    screenComponent.scrollIntoView({ behavior: \"smooth\" });\n    setSelectedScreen(index);\n    setShowHeaderOptions(false);\n  };\n\n  useEffect(() => {\n    return () => {\n      currentScreenSubscription.unsubscribe();\n    };\n  }, [currentScreenSubscription]);\n\n  return (\n    <div\n      className=\"header-container\"\n      onClick={() => setShowHeaderOptions(!showHeaderOptions)}\n    >\n      <div className=\"header-parent\">\n        <div\n          className=\"header-hamburger\"\n          onClick={() => setShowHeaderOptions(!showHeaderOptions)}\n        >\n          <FontAwesomeIcon className=\"header-hamburger-bars\" icon={faBars} />\n        </div>\n        <div className=\"header-logo\">\n          <span>DBROWN~</span>\n          <Particles\n            params={{\n              particles: {\n                number: {\n                  value: 50,\n                },\n                size: {\n                  value: 3,\n                },\n              },\n              interactivity: {\n                events: {\n                  onhover: {\n                    enable: true,\n                    mode: \"repulse\",\n                  },\n                },\n              },\n              modes: {\n                polygon: {\n                  distance: 250,\n                  duration: 2,\n                  size: 5,\n                  opacity: 0.4,\n                },\n                repulse: {\n                  distance: 400,\n                  duration: 4,\n                },\n              },\n            }}\n          />\n        </div>\n        <div\n          className={\n            showHeaderOptions\n              ? \"header-options show-hamburger-options\"\n              : \"header-options\"\n          }\n        >\n          {getHeaderOptions()}\n        </div>\n      </div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}